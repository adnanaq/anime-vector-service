version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: anime-vector-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__LOG_LEVEL=INFO
    networks:
      - vector-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Anime Vector Service
  vector-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: anime-vector-service
    ports:
      - "8002:8002"
    environment:
      # Vector Service Configuration
      - VECTOR_SERVICE_HOST=0.0.0.0
      - VECTOR_SERVICE_PORT=8002
      - DEBUG=false
      
      # Qdrant Configuration
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION_NAME=anime_database
      - QDRANT_VECTOR_SIZE=384
      - QDRANT_DISTANCE_METRIC=cosine
      
      # Multi-Vector Configuration
      - IMAGE_VECTOR_SIZE=512
      
      # Modern Embedding Configuration
      - TEXT_EMBEDDING_PROVIDER=huggingface
      - TEXT_EMBEDDING_MODEL=BAAI/bge-m3
      - IMAGE_EMBEDDING_PROVIDER=jinaclip
      - IMAGE_EMBEDDING_MODEL=jinaai/jina-clip-v2
      
      # Performance Configuration
      - QDRANT_ENABLE_QUANTIZATION=false
      - QDRANT_QUANTIZATION_TYPE=scalar
      - QDRANT_ENABLE_PAYLOAD_INDEXING=true
      
      # API Configuration
      - API_TITLE=Anime Vector Service
      - API_VERSION=1.0.0
      - MAX_SEARCH_LIMIT=100
      - MAX_BATCH_SIZE=500
      
      # Logging
      - LOG_LEVEL=INFO
    volumes:
      - model_cache:/app/cache
    networks:
      - vector-network
    depends_on:
      qdrant:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

networks:
  vector-network:
    driver: bridge

volumes:
  qdrant_data:
    driver: local
  model_cache:
    driver: local