name: Security Scanning

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    # Run daily at 2 AM UTC to catch new vulnerabilities
    - cron: "0 2 * * *"

jobs:
  trivy-container-scan:
    name: Trivy Container Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          echo "Disk space before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          docker system prune -af --volumes
          echo "Disk space after cleanup:"
          df -h

      - name: Build Docker image
        run: |
          docker build -t anime-vector-service:${{ github.sha }} \
            -f docker/Dockerfile .

      - name: Run Trivy vulnerability scanner on container
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: "anime-vector-service:${{ github.sha }}"
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          exit-code: "1" # Fail CI on critical/high vulnerabilities
          timeout: "10m"

      - name: Show Trivy vulnerabilities in logs
        run: trivy image --severity CRITICAL,HIGH --format table anime-vector-service:${{ github.sha }}

      - name: Inspect SARIF file
        run: jq '.runs[].results | length' trivy-results.sarif

      - name: Upload Trivy container scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: "trivy-results.sarif"

  trivy-filesystem-scan:
    name: Trivy Filesystem Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy filesystem scanner
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH,MEDIUM"
          exit-code: "0" # Don't fail CI, just report

      - name: Upload Trivy filesystem scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  trivy-config-scan:
    name: Trivy Config Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy configuration scanner
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: "config"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          exit-code: "0" # Don't fail CI, just report

      - name: Upload Trivy config scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
