name: "Main CI"

on:
  pull_request:
    branches:
      - main
      - test/ci-testing
  push:
    branches:
      - main

jobs:
  code-quality-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv pip sync

      - name: Run Ruff (Linting and Formatting)
        run: uv run ruff check . && uv run ruff format . --check

      - name: Run MyPy (Type Checking)
        run: uv run mypy src/

      - name: Run isort (Import Sorting)
        run: uv run isort . --check-only

      - name: Run Dependency Vulnerability Scan (pip-audit)
        run: uv run pip-audit

  test-execution:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}

      - name: Cache ML models
        uses: actions/cache@v4
        with:
          path: ~/.cache/huggingface
          key: ${{ runner.os }}-models-bge-openclip

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv pip sync

      - name: Run Pytest (Unit and Integration Tests)
        run: uv run pytest

      - name: Generate Coverage Report
        run: uv run coverage run -m pytest && uv run coverage report

  application-health-check:
    runs-on: ubuntu-latest
    needs: test-execution
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker Images
        run: docker-compose -f docker/docker-compose.yml build

      - name: Start Docker Containers
        run: docker-compose -f docker/docker-compose.yml up -d

      - name: Wait for services to be ready
        run: sleep 10 # Give services time to start

      - name: Run Health Checks
        run: |
          curl --fail http://localhost:8002/docs || exit 1
          curl --fail http://localhost:8002/health || exit 1 # Assuming a /health endpoint exists

      - name: Teardown Docker Containers
        run: docker-compose -f docker/docker-compose.yml down

  # ai-code-review:
  #   needs: application-health-check
  #   uses: ./.github/workflows/gemini-review.yml
  #   with:
  #     additional_context: "Focus on potential performance bottlenecks and security vulnerabilities."
#  ai-triage:
#    if: github.event_name == 'issues'
#    uses: ./.github/workflows/gemini-triage.yml

